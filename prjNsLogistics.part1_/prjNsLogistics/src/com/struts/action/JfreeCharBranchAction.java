/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.io.IOException;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.StandardPieToolTipGenerator;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.servlet.ServletUtilities;
import org.jfree.data.general.DefaultPieDataset;

import com.service.MarsBusinessservice;
import com.struts.form.MarsJfreeCharBranchForm;
import com.struts.form.MarsJfreeCharFormForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-27-2008
 * 
 * XDoclet definition:
 * @struts.action
 */
public class JfreeCharBranchAction extends Action {
	/*
	 * Generated Methods
	 */
	private MarsBusinessservice bs;

	public MarsBusinessservice getBs() {
		return bs;
	}

	public void setBs(MarsBusinessservice bs) {
		this.bs = bs;
	}

	private static Log log = LogFactory.getLog(JfreeCharCustomerAction.class);

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		DefaultPieDataset dataset = new DefaultPieDataset();
		Vector branchvc=bs.getBillinfobusiness().findByBranchidchar();
		for (int i = 0; i < branchvc.size(); i++) {
			MarsJfreeCharBranchForm cusf = (MarsJfreeCharBranchForm) branchvc.get(i);
			dataset.setValue(cusf.getBranchid(), Double.parseDouble(cusf
					.getCount()));
		}
		JFreeChart chart = ChartFactory.createPieChart3D("按客户信息进行统计分析", dataset, true, true, true); 
		PiePlot3D plot = (PiePlot3D)chart.getPlot(); 
		//plot.setURLGenerator(new StandardPieURLGenerator("barview.jsp")); //生成3维的超级链接
		chart.setBackgroundPaint(java.awt.Color.white); 
		plot.setToolTipGenerator(new StandardPieToolTipGenerator()); //设置生成方式
		
		StandardEntityCollection sec = new StandardEntityCollection(); //设置生成的数据集合
		//创建生成信息对象
		ChartRenderingInfo info = new ChartRenderingInfo(sec); 
		HttpSession session=request.getSession(true);
		
		try {
			//创建存储在内存中的文件名称
			String filename = ServletUtilities.saveChartAsJPEG(chart, 500, 300, info, session);
			//ChartUtilities.writeImageMap(out, "map0", info, false); 
			//获取图片的链接路径
			String graphURL = request.getContextPath() + "/servlet/DisplayChart?filename="+filename; 
			System.out.println(graphURL);
			//request.setAttribute("filename", filename); 
			request.setAttribute("graphURL", graphURL); 
			return mapping.findForward("list");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 

		return mapping.findForward("list");
		
	}
}