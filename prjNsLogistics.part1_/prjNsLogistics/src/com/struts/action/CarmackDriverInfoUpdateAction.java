/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.service.CarmackBusinessService;
import com.struts.form.CarmackBranchInfoForm;
import com.struts.form.CarmackDriverInfoForm;
import com.struts.form.OptDriverInfoForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-16-2008
 * 
 * XDoclet definition:
 * @struts.action
 */
public class CarmackDriverInfoUpdateAction extends Action {
	/*
	 * Generated Methods
	 */
	private CarmackBusinessService bs;
	public CarmackBusinessService getBs()
	{
		return bs;
	}
	public void setBs(CarmackBusinessService bs)
	{
		this.bs=bs;
	}

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//获取前台提交的数据信息
		String driverID=request.getParameter("DriverID");
		String driverAge=request.getParameter("DriverAge");
		String driverCardID=request.getParameter("DriverCardID");
		String driverPhone=request.getParameter("DriverPhone");
		String driverIsVacancy=request.getParameter("DriverIsVacancy");
		String driverName=request.getParameter("DriverName");
		String branchID=request.getParameter("BranchID");
		String driverSex=request.getParameter("DriverSex");
		String driverDriveCardID=request.getParameter("DriverDriveCardID");

		//将前台数据封装到UserInfoForm中
		OptDriverInfoForm di = new OptDriverInfoForm();
		di.setDriverid(driverID);
		di.setDriverage(driverAge);
		di.setDrivercardid(driverCardID);
		di.setDriverphone(driverPhone);
		di.setDriverisvacancy(driverIsVacancy);
		di.setDrivername(driverName);
		di.setBranchid(branchID);
		di.setDriversex(driverSex);
		di.setDriverdrivecardid(driverDriveCardID);
		
		boolean isok = bs.getDriverinfobu().update(di);
		
		request.setAttribute("diUpdateState", isok);
		
		return mapping.findForward("diUpdateOK");
	}
}