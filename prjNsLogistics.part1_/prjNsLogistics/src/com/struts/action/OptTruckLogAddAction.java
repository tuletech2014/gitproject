/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.service.OptBuService;
import com.struts.form.OptBillInfoForm;
import com.struts.form.OptCargoInfoForm;
import com.struts.form.OptDriverInfoForm;
import com.struts.form.OptTrafficLogForm;
import com.struts.form.OptTruckInfoForm;
import com.struts.form.OptTruckLogForm;
import com.struts.form.OptUserInfoForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-21-2008
 * 
 * XDoclet definition:
 * @struts.action
 */
public class OptTruckLogAddAction extends Action {
	/*
	 * Generated Methods
	 */
	//声明私有的OptBuService
	private OptBuService bus;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
	
		//获取前台传来的数据
		String billid = request.getParameter("BillID");
		String truckid = request.getParameter("TruckID");
		String driverid = request.getParameter("DriverID");
		String tlstartdata = request.getParameter("TLStartData");
		String tlarrive = request.getParameter("TLArrive");
		String branchid = request.getParameter("BranchID");
	
		//将前台车次数据封装到ActionForm里
		OptTruckLogForm ti = new OptTruckLogForm();
		ti.setBranchid(branchid);
		ti.setDriverid(driverid);
		ti.setTruckid(truckid);
		ti.setTlarrive(tlarrive);
		ti.setTlstartdata(tlstartdata);
	
		//执行车次添加业务
		bus.getTrucklogbuss().save(ti);
	
		//获取刚才添加车次的编号
		String tlid=bus.getTrucklogbuss().findLastTlID(branchid);
	
		//将货票编号和车次编号封装到ActionForm里
		OptTrafficLogForm traffic = new OptTrafficLogForm();
		traffic.setBillid(billid);
		traffic.setTlid(tlid);
		traffic.setBranchid(branchid);
		
		//执行运输记录添加业务
		bus.getTrafficbuss().save(traffic);
		
		boolean isok = false;
		
		//执行修改状态操作，分别修改货票状态，车辆状态，司机状态，货票操作人以及货物状态并且添加货物的出库时间
		//更改车辆状态
		OptTruckInfoForm tif = (OptTruckInfoForm) bus.getTruckbuss().findByID(truckid);
		tif.setTruckisvacancy("1");
		isok=bus.getTruckbuss().update(tif);
		
		//更改司机状态
		OptDriverInfoForm dif = (OptDriverInfoForm) bus.getDriverbuss().findByID(driverid);
		dif.setDriverisvacancy("1");
		isok=bus.getDriverbuss().update(dif);
		
		//更改货票状态以及操作人
		OptBillInfoForm billform = (OptBillInfoForm) bus.getBillbuss().findByID(billid);
		billform.setBillstateid("1003");
			//获取当前登录用户的ID
			OptUserInfoForm uif = (OptUserInfoForm) request.getSession(true).getAttribute("loginer");
		billform.setUserid(uif.getUserid());
		isok=bus.getBillbuss().update(billform);
		
		//更新货物状态并添加出库时间
			//根据货票编号从货物集合表获取所有货物信息
			Vector cgs = billform.getCargos();
			for (int i = 0; i < cgs.size(); i++) {
				OptCargoInfoForm cif = (OptCargoInfoForm) cgs.get(i);
				cif.setCargostate("1");
				cif.setCargoenddata(new java.util.Date().toString());
				isok=bus.getCargobuss().update(cif);
			}
		request.setAttribute("TruckInfoAddState", isok);
				
		return mapping.findForward("truckAddOK");
	}
	public OptBuService getBus() {
		return bus;
	}
	public void setBus(OptBuService bus) {
		this.bus = bus;
	}
}